CHIP DisplayCounter201890722 {
    IN inc, reset;
    OUT a, b, c, d, e, f, g;

    PARTS:
    // 计算 `load` 信号，如果 `inc` 或 `reset` 为高，则 `load_signal` 也为高
    Or(a=inc, b=reset, out=load_signal);

    // 4-bit Register 存储计数值
    Register(in=counter_out, load=load_signal, out=counter_value);

    // Increment logic: 如果 `inc` 为高，则 `counter_value` 递增
    Inc16(in=counter_value, out=inc_value);

    // Reset logic: 如果 `reset` 为高，计数器清零；否则更新
    Mux16(a=inc_value, b=false[0..3], sel=reset, out=counter_out);

    // 7 段解码器
    BinaryTo7Seg(in=counter_value[0..3], a=a, b=b, c=c, d=d, e=e, f=f, g=g);
}
load DisplayCounter201890722.hdl,
output-list inc reset counter_value%B4 a b c d e f g;

set inc 1,
set reset 0,
eval,
output;

set inc 1,
eval,
output;

set reset 1,
eval,
output;
HardwareSimulator DisplayCounter201890722.tst
